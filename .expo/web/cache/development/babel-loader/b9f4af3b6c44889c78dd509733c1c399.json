{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ismailchahal/Desktop/Arslan/React Native/ZeroForNothing-Mobile/node_modules/react-native-video/Video.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from \"./TextTrackType\";\nimport FilterType from \"./FilterType\";\nimport VideoResizeMode from \"./VideoResizeMode.js\";\nvar styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\nexport { TextTrackType, FilterType };\n\nvar Video = function (_Component) {\n  _inherits(Video, _Component);\n\n  var _super = _createSuper(Video);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _super.call(this, props);\n\n    _this.seek = function (time) {\n      var tolerance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      if (isNaN(time)) throw new Error('Specified time is not a number');\n\n      if (Platform.OS === 'ios') {\n        _this.setNativeProps({\n          seek: {\n            time: time,\n            tolerance: tolerance\n          }\n        });\n      } else {\n        _this.setNativeProps({\n          seek: time\n        });\n      }\n    };\n\n    _this.presentFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: true\n      });\n    };\n\n    _this.dismissFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: false\n      });\n    };\n\n    _this.save = function _callee(options) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(NativeModules.VideoManager.save(options, findNodeHandle(_this._root)));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.restoreUserInterfaceForPictureInPictureStopCompleted = function (restored) {\n      _this.setNativeProps({\n        restoreUserInterfaceForPIPStopCompletionHandler: restored\n      });\n    };\n\n    _this._assignRoot = function (component) {\n      _this._root = component;\n    };\n\n    _this._hidePoster = function () {\n      if (_this.state.showPoster) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n    };\n\n    _this._onLoadStart = function (event) {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart(event.nativeEvent);\n      }\n    };\n\n    _this._onLoad = function (event) {\n      if (Platform.OS === 'windows') {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n    };\n\n    _this._onError = function (event) {\n      if (_this.props.onError) {\n        _this.props.onError(event.nativeEvent);\n      }\n    };\n\n    _this._onProgress = function (event) {\n      if (_this.props.onProgress) {\n        _this.props.onProgress(event.nativeEvent);\n      }\n    };\n\n    _this._onBandwidthUpdate = function (event) {\n      if (_this.props.onBandwidthUpdate) {\n        _this.props.onBandwidthUpdate(event.nativeEvent);\n      }\n    };\n\n    _this._onSeek = function (event) {\n      if (_this.props.onSeek) {\n        _this.props.onSeek(event.nativeEvent);\n      }\n    };\n\n    _this._onEnd = function (event) {\n      if (_this.props.onEnd) {\n        _this.props.onEnd(event.nativeEvent);\n      }\n    };\n\n    _this._onTimedMetadata = function (event) {\n      if (_this.props.onTimedMetadata) {\n        _this.props.onTimedMetadata(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillPresent = function (event) {\n      if (_this.props.onFullscreenPlayerWillPresent) {\n        _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidPresent = function (event) {\n      if (_this.props.onFullscreenPlayerDidPresent) {\n        _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerWillDismiss) {\n        _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerDidDismiss) {\n        _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onReadyForDisplay = function (event) {\n      _this._hidePoster();\n\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackStalled = function (event) {\n      if (_this.props.onPlaybackStalled) {\n        _this.props.onPlaybackStalled(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackResume = function (event) {\n      if (_this.props.onPlaybackResume) {\n        _this.props.onPlaybackResume(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackRateChange = function (event) {\n      if (_this.props.onPlaybackRateChange) {\n        _this.props.onPlaybackRateChange(event.nativeEvent);\n      }\n    };\n\n    _this._onExternalPlaybackChange = function (event) {\n      if (_this.props.onExternalPlaybackChange) {\n        _this.props.onExternalPlaybackChange(event.nativeEvent);\n      }\n    };\n\n    _this._onAudioBecomingNoisy = function () {\n      if (_this.props.onAudioBecomingNoisy) {\n        _this.props.onAudioBecomingNoisy();\n      }\n    };\n\n    _this._onPictureInPictureStatusChanged = function (event) {\n      if (_this.props.onPictureInPictureStatusChanged) {\n        _this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onRestoreUserInterfaceForPictureInPictureStop = function (event) {\n      if (_this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n        _this.props.onRestoreUserInterfaceForPictureInPictureStop();\n      }\n    };\n\n    _this._onAudioFocusChanged = function (event) {\n      if (_this.props.onAudioFocusChanged) {\n        _this.props.onAudioFocusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onBuffer = function (event) {\n      if (_this.props.onBuffer) {\n        _this.props.onBuffer(event.nativeEvent);\n      }\n    };\n\n    _this.getViewManagerConfig = function (viewManagerName) {\n      if (!NativeModules.UIManager.getViewManagerConfig) {\n        return NativeModules.UIManager[viewManagerName];\n      }\n\n      return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n    };\n\n    _this.state = {\n      showPoster: !!props.poster\n    };\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"toTypeString\",\n    value: function toTypeString(x) {\n      switch (typeof x) {\n        case \"object\":\n          return x instanceof Date ? x.toISOString() : JSON.stringify(x);\n\n        case \"undefined\":\n          return \"\";\n\n        default:\n          return x.toString();\n      }\n    }\n  }, {\n    key: \"stringsOnlyObject\",\n    value: function stringsOnlyObject(obj) {\n      var _this2 = this;\n\n      var strObj = {};\n      Object.keys(obj).forEach(function (x) {\n        strObj[x] = _this2.toTypeString(obj[x]);\n      });\n      return strObj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resizeMode = this.props.resizeMode;\n      var source = resolveAssetSource(this.props.source) || {};\n      var shouldCache = !Boolean(source.__packager_asset);\n      var uri = source.uri || '';\n\n      if (uri && uri.match(/^\\//)) {\n        uri = \"file://\" + uri;\n      }\n\n      if (!uri) {\n        console.warn('Trying to load empty source.');\n      }\n\n      var isNetwork = !!(uri && uri.match(/^https?:/));\n      var isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n      var nativeResizeMode;\n      var RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n      if (resizeMode === VideoResizeMode.stretch) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n      } else if (resizeMode === VideoResizeMode.contain) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n      } else if (resizeMode === VideoResizeMode.cover) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n      } else {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n      }\n\n      var nativeProps = _extends({}, this.props);\n\n      _extends(nativeProps, {\n        style: [styles.base, nativeProps.style],\n        resizeMode: nativeResizeMode,\n        src: {\n          uri: uri,\n          isNetwork: isNetwork,\n          isAsset: isAsset,\n          shouldCache: shouldCache,\n          type: source.type || '',\n          mainVer: source.mainVer || 0,\n          patchVer: source.patchVer || 0,\n          requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n        },\n        onVideoLoadStart: this._onLoadStart,\n        onVideoLoad: this._onLoad,\n        onVideoError: this._onError,\n        onVideoProgress: this._onProgress,\n        onVideoSeek: this._onSeek,\n        onVideoEnd: this._onEnd,\n        onVideoBuffer: this._onBuffer,\n        onVideoBandwidthUpdate: this._onBandwidthUpdate,\n        onTimedMetadata: this._onTimedMetadata,\n        onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n        onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n        onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n        onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n        onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n        onReadyForDisplay: this._onReadyForDisplay,\n        onPlaybackStalled: this._onPlaybackStalled,\n        onPlaybackResume: this._onPlaybackResume,\n        onPlaybackRateChange: this._onPlaybackRateChange,\n        onAudioFocusChanged: this._onAudioFocusChanged,\n        onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n        onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop\n      });\n\n      var posterStyle = _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n        resizeMode: this.props.posterResizeMode || 'contain'\n      });\n\n      return React.createElement(View, {\n        style: nativeProps.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 7\n        }\n      }, React.createElement(RCTVideo, _extends({\n        ref: this._assignRoot\n      }, nativeProps, {\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }\n      })), this.state.showPoster && React.createElement(Image, {\n        style: posterStyle,\n        source: {\n          uri: this.props.poster\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport { Video as default };\nVideo.propTypes = _objectSpread({\n  filter: PropTypes.oneOf([FilterType.NONE, FilterType.INVERT, FilterType.MONOCHROME, FilterType.POSTERIZE, FilterType.FALSE, FilterType.MAXIMUMCOMPONENT, FilterType.MINIMUMCOMPONENT, FilterType.CHROME, FilterType.FADE, FilterType.INSTANT, FilterType.MONO, FilterType.NOIR, FilterType.PROCESS, FilterType.TONAL, FilterType.TRANSFER, FilterType.SEPIA]),\n  filterEnabled: PropTypes.bool,\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n  source: PropTypes.oneOfType([PropTypes.shape({\n    uri: PropTypes.string\n  }), PropTypes.number]),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: Image.propTypes.resizeMode,\n  repeat: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }),\n  textTracks: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    uri: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([TextTrackType.SRT, TextTrackType.TTML, TextTrackType.VTT]),\n    language: PropTypes.string.isRequired\n  })),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number\n}, ViewPropTypes);\nvar RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true\n  }\n});","map":{"version":3,"sources":["/Users/ismailchahal/Desktop/Arslan/React Native/ZeroForNothing-Mobile/node_modules/react-native-video/Video.js"],"names":["React","Component","PropTypes","requireNativeComponent","resolveAssetSource","TextTrackType","FilterType","VideoResizeMode","styles","StyleSheet","create","base","overflow","Video","props","seek","time","tolerance","isNaN","Error","Platform","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","save","options","NativeModules","VideoManager","findNodeHandle","_root","restoreUserInterfaceForPictureInPictureStopCompleted","restored","restoreUserInterfaceForPIPStopCompletionHandler","_assignRoot","component","_hidePoster","state","showPoster","setState","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onBandwidthUpdate","onBandwidthUpdate","_onSeek","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","onPlaybackRateChange","_onExternalPlaybackChange","onExternalPlaybackChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onPictureInPictureStatusChanged","onPictureInPictureStatusChanged","_onRestoreUserInterfaceForPictureInPictureStop","onRestoreUserInterfaceForPictureInPictureStop","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","getViewManagerConfig","viewManagerName","UIManager","poster","nativeProps","x","Date","toISOString","JSON","stringify","toString","obj","strObj","Object","keys","forEach","toTypeString","resizeMode","source","shouldCache","Boolean","__packager_asset","uri","match","console","warn","isNetwork","isAsset","nativeResizeMode","RCTVideoInstance","stretch","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","style","src","type","mainVer","patchVer","requestHeaders","headers","stringsOnlyObject","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoBandwidthUpdate","onVideoAudioBecomingNoisy","onVideoExternalPlaybackChange","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","posterStyle","absoluteFillObject","posterResizeMode","absoluteFill","propTypes","filter","oneOf","NONE","INVERT","MONOCHROME","POSTERIZE","FALSE","MAXIMUMCOMPONENT","MINIMUMCOMPONENT","CHROME","FADE","INSTANT","MONO","NOIR","PROCESS","TONAL","TRANSFER","SEPIA","filterEnabled","bool","object","oneOfType","number","func","shape","string","minLoadRetryCount","maxBitRate","Image","repeat","allowsExternalPlayback","selectedAudioTrack","isRequired","value","selectedVideoTrack","selectedTextTrack","textTracks","arrayOf","title","SRT","TTML","VTT","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","pictureInPicture","playInBackground","playWhenInactive","ignoreSilentSwitch","reportBandwidth","disableFocus","controls","audioOnly","currentTime","fullscreenAutorotate","fullscreenOrientation","progressUpdateInterval","useTextureView","hideShutterView","needsToRestoreUserInterfaceForPictureInPictureStop","scaleX","scaleY","translateX","translateY","rotation","ViewPropTypes","RCTVideo","nativeOnly"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {StyleSheet, requireNativeComponent, NativeModules, View, ViewPropTypes, Image, Platform, findNodeHandle} from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from './TextTrackType';\nimport FilterType from './FilterType';\nimport VideoResizeMode from './VideoResizeMode.js';\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nexport { TextTrackType, FilterType };\n\nexport default class Video extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPoster: !!props.poster\n    };\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n  \n  toTypeString(x) {\n    switch (typeof x) {\n      case \"object\":\n        return x instanceof Date \n          ? x.toISOString() \n          : JSON.stringify(x); // object, null\n      case \"undefined\":\n        return \"\";\n      default: // boolean, number, string\n        return x.toString();      \n    }\n  }\n\n  stringsOnlyObject(obj) {\n    const strObj = {};\n\n    Object.keys(obj).forEach(x => {\n      strObj[x] = this.toTypeString(obj[x]);\n    });\n\n    return strObj;\n  }\n\n  seek = (time, tolerance = 100) => {\n    if (isNaN(time)) throw new Error('Specified time is not a number');\n    \n    if (Platform.OS === 'ios') {\n      this.setNativeProps({\n        seek: {\n          time,\n          tolerance\n        }\n      });\n    } else {\n      this.setNativeProps({ seek: time });\n    }\n  };\n\n  presentFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: true });\n  };\n\n  dismissFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: false });\n  };\n\n  save = async (options?) => {\n    return await NativeModules.VideoManager.save(options, findNodeHandle(this._root));\n  }\n\n  restoreUserInterfaceForPictureInPictureStopCompleted = (restored) => {\n    this.setNativeProps({ restoreUserInterfaceForPIPStopCompletionHandler: restored });\n  };\n\n  _assignRoot = (component) => {\n    this._root = component;\n  };\n\n  _hidePoster = () => {\n    if (this.state.showPoster) {\n      this.setState({showPoster: false});\n    }\n  }\n\n  _onLoadStart = (event) => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart(event.nativeEvent);\n    }\n  };\n\n  _onLoad = (event) => {\n    // Need to hide poster here for windows as onReadyForDisplay is not implemented\n    if (Platform.OS === 'windows') {\n      this._hidePoster();\n    }\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n  };\n\n  _onError = (event) => {\n    if (this.props.onError) {\n      this.props.onError(event.nativeEvent);\n    }\n  };\n\n  _onProgress = (event) => {\n    if (this.props.onProgress) {\n      this.props.onProgress(event.nativeEvent);\n    }\n  };\n\n  _onBandwidthUpdate = (event) => {\n    if (this.props.onBandwidthUpdate) {\n      this.props.onBandwidthUpdate(event.nativeEvent);\n    }\n  };  \n\n  _onSeek = (event) => {\n    if (this.props.onSeek) {\n      this.props.onSeek(event.nativeEvent);\n    }\n  };\n\n  _onEnd = (event) => {\n    if (this.props.onEnd) {\n      this.props.onEnd(event.nativeEvent);\n    }\n  };\n\n  _onTimedMetadata = (event) => {\n    if (this.props.onTimedMetadata) {\n      this.props.onTimedMetadata(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillPresent = (event) => {\n    if (this.props.onFullscreenPlayerWillPresent) {\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidPresent = (event) => {\n    if (this.props.onFullscreenPlayerDidPresent) {\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillDismiss = (event) => {\n    if (this.props.onFullscreenPlayerWillDismiss) {\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidDismiss = (event) => {\n    if (this.props.onFullscreenPlayerDidDismiss) {\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n    }\n  };\n\n  _onReadyForDisplay = (event) => {\n    this._hidePoster();\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackStalled = (event) => {\n    if (this.props.onPlaybackStalled) {\n      this.props.onPlaybackStalled(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackResume = (event) => {\n    if (this.props.onPlaybackResume) {\n      this.props.onPlaybackResume(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackRateChange = (event) => {\n    if (this.props.onPlaybackRateChange) {\n      this.props.onPlaybackRateChange(event.nativeEvent);\n    }\n  };\n  \n  _onExternalPlaybackChange = (event) => {\n    if (this.props.onExternalPlaybackChange) {\n      this.props.onExternalPlaybackChange(event.nativeEvent);\n    }\n  }\n\n  _onAudioBecomingNoisy = () => {\n    if (this.props.onAudioBecomingNoisy) {\n      this.props.onAudioBecomingNoisy();\n    }\n  };\n\n  _onPictureInPictureStatusChanged = (event) => {\n    if (this.props.onPictureInPictureStatusChanged) {\n      this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n    }\n  };\n\n  _onRestoreUserInterfaceForPictureInPictureStop = (event) => {\n  \tif (this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n      this.props.onRestoreUserInterfaceForPictureInPictureStop();\n    }\n  };\n\n  _onAudioFocusChanged = (event) => {\n    if (this.props.onAudioFocusChanged) {\n      this.props.onAudioFocusChanged(event.nativeEvent);\n    }\n  };\n\n  _onBuffer = (event) => {\n    if (this.props.onBuffer) {\n      this.props.onBuffer(event.nativeEvent);\n    }\n  };\n\n  getViewManagerConfig = viewManagerName => {\n    if (!NativeModules.UIManager.getViewManagerConfig) {\n      return NativeModules.UIManager[viewManagerName];\n    }\n    return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n  };\n\n  render() {\n    const resizeMode = this.props.resizeMode;\n    const source = resolveAssetSource(this.props.source) || {};\n    const shouldCache = !Boolean(source.__packager_asset)\n\n    let uri = source.uri || '';\n    if (uri && uri.match(/^\\//)) {\n      uri = `file://${uri}`;\n    }\n    \n    if (!uri) {\n      console.warn('Trying to load empty source.');\n    }\n\n    const isNetwork = !!(uri && uri.match(/^https?:/));\n    const isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n\n    let nativeResizeMode;\n    const RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n    if (resizeMode === VideoResizeMode.stretch) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n    } else if (resizeMode === VideoResizeMode.contain) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n    } else if (resizeMode === VideoResizeMode.cover) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n    } else {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n    }\n\n    const nativeProps = Object.assign({}, this.props);\n    Object.assign(nativeProps, {\n      style: [styles.base, nativeProps.style],\n      resizeMode: nativeResizeMode,\n      src: {\n        uri,\n        isNetwork,\n        isAsset,\n        shouldCache,\n        type: source.type || '',\n        mainVer: source.mainVer || 0,\n        patchVer: source.patchVer || 0,\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n      },\n      onVideoLoadStart: this._onLoadStart,\n      onVideoLoad: this._onLoad,\n      onVideoError: this._onError,\n      onVideoProgress: this._onProgress,\n      onVideoSeek: this._onSeek,\n      onVideoEnd: this._onEnd,\n      onVideoBuffer: this._onBuffer,\n      onVideoBandwidthUpdate: this._onBandwidthUpdate,\n      onTimedMetadata: this._onTimedMetadata,\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n      onReadyForDisplay: this._onReadyForDisplay,\n      onPlaybackStalled: this._onPlaybackStalled,\n      onPlaybackResume: this._onPlaybackResume,\n      onPlaybackRateChange: this._onPlaybackRateChange,\n      onAudioFocusChanged: this._onAudioFocusChanged,\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n      onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop,\n    });\n\n    const posterStyle = {\n      ...StyleSheet.absoluteFillObject,\n      resizeMode: this.props.posterResizeMode || 'contain',\n    };\n\n    return (\n      <View style={nativeProps.style}>\n        <RCTVideo\n          ref={this._assignRoot}\n          {...nativeProps}\n          style={StyleSheet.absoluteFill}\n        />\n        {this.state.showPoster && (\n          <Image style={posterStyle} source={{ uri: this.props.poster }} />\n        )}\n      </View>\n    );\n  }\n}\n\nVideo.propTypes = {\n  filter: PropTypes.oneOf([\n      FilterType.NONE,\n      FilterType.INVERT,\n      FilterType.MONOCHROME,\n      FilterType.POSTERIZE,\n      FilterType.FALSE,\n      FilterType.MAXIMUMCOMPONENT,\n      FilterType.MINIMUMCOMPONENT,\n      FilterType.CHROME,\n      FilterType.FADE,\n      FilterType.INSTANT,\n      FilterType.MONO,\n      FilterType.NOIR,\n      FilterType.PROCESS,\n      FilterType.TONAL,\n      FilterType.TRANSFER,\n      FilterType.SEPIA\n  ]),\n  filterEnabled: PropTypes.bool,\n  /* Native only */\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object\n  ]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n\n  /* Wrapper component */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string\n    }),\n    // Opaque type returned by require('./video.mp4')\n    PropTypes.number\n  ]),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: Image.propTypes.resizeMode,\n  repeat: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  }),  \n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  }),\n  textTracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        TextTrackType.SRT,\n        TextTrackType.TTML,\n        TextTrackType.VTT,\n      ]),\n      language: PropTypes.string.isRequired\n    })\n  ),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all','landscape','portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n\n  /* Required by react-native */\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number,\n  ...ViewPropTypes,\n};\n\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}