{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nexport var GetTopPosts = function (_React$Component) {\n  _inherits(GetTopPosts, _React$Component);\n\n  var _super = _createSuper(GetTopPosts);\n\n  function GetTopPosts() {\n    var _this;\n\n    _classCallCheck(this, GetTopPosts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.sendData = function () {\n      function postData() {\n        var url,\n            data,\n            response,\n            _args = arguments;\n        return _regeneratorRuntime.async(function postData$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n                data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(fetch(url, {\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  mode: 'cors',\n                  method: 'post',\n                  body: JSON.stringify(data)\n                }));\n\n              case 4:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.json());\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n\n      postData('https://zerofornothing.com/getTopPosts', {\n        categoryID: null,\n        startPage: 1,\n        username: null\n      }).then(function (postsList) {\n        postsList = JSON.parse(postsList);\n        var array = [];\n\n        for (var x in postsList) {\n          array.push({\n            'postID': postsList[x].postID,\n            'picToken': postsList[x].picToken,\n            'picType': postsList[x].picType,\n            'categoryType': postsList[x].categoryType,\n            'postTitle': postsList[x].postTitle,\n            'imageName': postsList[x].imageName,\n            'imageType': postsList[x].imageType,\n            'videoName': postsList[x].videoName,\n            'videoType': postsList[x].videoType,\n            'mediaUrl': postsList[x].mediaUrl,\n            'postText': postsList[x].postText,\n            'username': postsList[x].username,\n            'postDate': postsList[x].postDate,\n            'commentsCount': postsList[x].commentsCount,\n            'postAgree': postsList[x].postAgree,\n            'postDisagree': postsList[x].postDisagree,\n            'userInteracted': postsList[x].userInteracted,\n            'postViews': postsList[x].postViews\n          });\n        }\n\n        _this.props.parentCallback(array);\n      }).catch(function (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GetTopPosts, [{\n    key: \"render\",\n    value: function render() {\n      {\n        this.sendData();\n      }\n      return null;\n    }\n  }]);\n\n  return GetTopPosts;\n}(React.Component);\n;","map":{"version":3,"sources":["/Users/ismailchahal/Desktop/Arslan/React Native/ZeroForNothing-Mobile/Main/js/community.js"],"names":["React","GetTopPosts","sendData","postData","url","data","fetch","headers","mode","method","body","JSON","stringify","response","json","categoryID","startPage","username","then","postsList","parse","array","x","push","postID","picToken","picType","categoryType","postTitle","imageName","imageType","videoName","videoType","mediaUrl","postText","postDate","commentsCount","postAgree","postDisagree","userInteracted","postViews","props","parentCallback","catch","error","console","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nexport class GetTopPosts extends React.Component{\n\n   sendData = () => {\n    async function postData(url = '', data = {}) {\n      const response = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: 'cors',\n        method: 'post',\n        body: JSON.stringify(data)\n      });\n      return response.json();\n    }\n    postData('https://zerofornothing.com/getTopPosts', {\n      categoryID: null,\n      startPage: 1,\n      username: null\n    })\n    .then(postsList => {\n      postsList = JSON.parse(postsList)\n      var array = [];\n      for( var x in postsList){\n        array.push({ 'postID' : postsList[x].postID, 'picToken': postsList[x].picToken, 'picType' : postsList[x].picType,'categoryType': postsList[x].categoryType, 'postTitle' : postsList[x].postTitle,'imageName': postsList[x].imageName, 'imageType' : postsList[x].imageType,'videoName' : postsList[x].videoName,'videoType': postsList[x].videoType, 'mediaUrl' : postsList[x].mediaUrl,'postText': postsList[x].postText, 'username': postsList[x].username, 'postDate' : postsList[x].postDate,'commentsCount': postsList[x].commentsCount, 'postAgree' : postsList[x].postAgree,'postDisagree': postsList[x].postDisagree, 'userInteracted' : postsList[x].userInteracted,'postViews': postsList[x].postViews\n      })\n      }\n      this.props.parentCallback(array);\n    }).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n    });\n  }\nrender(){\n  {this.sendData()}\n  return null\n}\n};\n"]},"metadata":{},"sourceType":"module"}